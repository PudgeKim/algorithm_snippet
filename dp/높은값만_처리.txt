1 6 2 3 5 가 주어질 때 미사일을 이전 높이보다 높아야만 격추시킬 수 있다.
ex) 1 -> 6 후에 2는 6보다 작으므로 격추 불가능

1 6 2 3 5
0 0 0 0 0   이전 미사일의 인덱스들
0 0 0 0 0   현재 미사일포함 격추한 최대 미사일 개수들

첫째 미사일 격추
1 6 2 3 5
0 0 0 0 0
1 1 0 0 0

현재 세번째 미사일 탐색중이라면 세번째 미사일 이전
미사일들중에서 높이가 낮은 미사일들을 대상으로 조사해서 
그중 가장 많은 미사일의 최대개수에 1을 더함

.. 최종 테이블
1 6 2 3 5
0 1 1 3 4
1 2 2 3 4

인덱스는 순서를 출력해야하는 경우 사용

n = int(input())
boxes = list(map(int, input().split()))

dp = [0]*n
dp[0] = 1

res = dp[0]  # 중요 (혹시 이거쓸때 0말고 dp[0]으로 초기화해야됨 첫번째 이후 증가안하면 반례나올수도)
for i in range(1, n):
    prev = -1  
    prev_idx = -1   # 이러면 마지막 인덱스를 계속 참조하는데 dp[-1] = 0이라 ㄱㅊ
    cur = boxes[i]
    for j in range(i):
        if cur > boxes[j]:
            if prev < dp[j]:
                prev = dp[j]
                prev_idx = j

    dp[i] = dp[prev_idx] + 1

print(max(dp))

